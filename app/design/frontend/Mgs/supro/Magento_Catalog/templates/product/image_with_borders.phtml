<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
?>
<?php
/** @var $block \Magento\Catalog\Block\Product\Image */
/** @var $escaper \Magento\Framework\Escaper */
/** @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer */
/**
 * Enable lazy loading for images with borders and if variable enable_lazy_loading_for_images_without_borders
 * is enabled in view.xml. Otherwise small size images without borders may be distorted. So max-width is used for them
 * to prevent stretching and lazy loading does not work.
 */
$themeHelperImage = $this->helper('MGS\ThemeSettings\Helper\Image'); 
$themeHelperConfig = $this->helper('MGS\ThemeSettings\Helper\Config');
$product = $this->getProduct();
$borders = (bool)$block->getVar('product_image_white_borders', 'Magento_Catalog');
$enableLazyLoadingWithoutBorders = (bool)$block->getVar(
    'enable_lazy_loading_for_images_without_borders',
    'Magento_Catalog'
);
$width = (int)$block->getWidth();
$paddingBottom = $themeHelperImage->getRatio() * 100;
?>
<?php 
	$themeHelperImage->init($product, 'category_page_grid');
	$imageProduct = $themeHelperImage->init($product, 'category_page_grid')->getUrl();
	$productImageHover = $themeHelperImage->init($product, 'product_base_image')->getUrl();
?>
<?php
	$themeSettingConfig = $this->helper('MGS\ThemeSettings\Helper\Config');
	$lazyLoad = $themeSettingConfig->getStoreConfig('themesettings/general/lazy_load');
	$hoverChangeImage = $themeSettingConfig->getStoreConfig('themesettings/catalog/hover_change');
?>
<?php if($lazyLoad): ?>
	<span class="product-image-container product-image-container-<?= /* @noEscape */ $block->getProductId() ?>">
		<span class="product-image-wrapper parent_lazy">
			<img class="<?= $escaper->escapeHtmlAttr($block->getClass()) ?> lazy"
				<?php foreach ($block->getCustomAttributes() as $name => $value): ?>
					<?= $escaper->escapeHtmlAttr($name) ?>="<?= $escaper->escapeHtmlAttr($value) ?>"
				<?php endforeach; ?>
				src="<?= $themeSettingConfig->getImageLazyLoad() ?>"
				data-src="<?= $escaper->escapeUrl($imageProduct) ?>"
				<?php if ($borders || $enableLazyLoadingWithoutBorders): ?>
					width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
					height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
				<?php else: ?>
					max-width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
					max-height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
				<?php endif; ?>
				alt="<?= $escaper->escapeHtmlAttr($block->getLabel()) ?>"/>
			<?php if ($hoverChangeImage) : ?>
				<?php if(basename($product->getData('image')) != basename($product->getData('small_image'))): ?>
					<img class="<?= $escaper->escapeHtmlAttr($block->getClass()) ?> img-hover-show lazy"
					<?php foreach ($block->getCustomAttributes() as $name => $value): ?>
						<?= $escaper->escapeHtmlAttr($name) ?>="<?= $escaper->escapeHtmlAttr($value) ?>"
					<?php endforeach; ?>
					src="<?= $themeSettingConfig->getImageLazyLoad() ?>"
					data-src="<?= $escaper->escapeUrl($productImageHover) ?>"
					<?php if ($borders || $enableLazyLoadingWithoutBorders): ?>
						width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
						height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
					<?php else: ?>
						max-width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
						max-height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
					<?php endif; ?>
					alt="<?= $escaper->escapeHtmlAttr($block->getLabel()) ?>"/>
				<?php endif; ?>
			<?php endif; ?>
		</span>
	</span>
<?php else: ?>
	<span class="product-image-container product-image-container-<?= /* @noEscape */ $block->getProductId() ?>">
		<span class="product-image-wrapper">
			<img class="<?= $escaper->escapeHtmlAttr($block->getClass()) ?>"
				<?php foreach ($block->getCustomAttributes() as $name => $value): ?>
					<?= $escaper->escapeHtmlAttr($name) ?>="<?= $escaper->escapeHtmlAttr($value) ?>"
				<?php endforeach; ?>
				src="<?= $escaper->escapeUrl($imageProduct) ?>"
				loading="lazy"
				<?php if ($borders || $enableLazyLoadingWithoutBorders): ?>
					width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
					height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
				<?php else: ?>
					max-width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
					max-height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
				<?php endif; ?>
				alt="<?= $escaper->escapeHtmlAttr($block->getLabel()) ?>"/>
			<?php if ($hoverChangeImage) : ?>
				<?php if(basename($product->getData('image')) != basename($product->getData('small_image'))): ?>
					<img class="<?= $escaper->escapeHtmlAttr($block->getClass()) ?> img-hover-show"
					<?php foreach ($block->getCustomAttributes() as $name => $value): ?>
						<?= $escaper->escapeHtmlAttr($name) ?>="<?= $escaper->escapeHtmlAttr($value) ?>"
					<?php endforeach; ?>
					src="<?= $escaper->escapeUrl($productImageHover) ?>"
					<?php if ($borders || $enableLazyLoadingWithoutBorders): ?>
						width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
						height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
					<?php else: ?>
						max-width="<?= $escaper->escapeHtmlAttr($block->getWidth()) ?>"
						max-height="<?= $escaper->escapeHtmlAttr($block->getHeight()) ?>"
					<?php endif; ?>
					alt="<?= $escaper->escapeHtmlAttr($block->getLabel()) ?>"/>
				<?php endif; ?>
			<?php endif; ?>
		</span>
	</span>
<?php endif; ?>
<?php
$styles = <<<STYLE
.product-image-container-{$block->getProductId()} {
    width: {$width}px;
}
.product-image-container-{$block->getProductId()} span.product-image-wrapper {
    padding-bottom: {$paddingBottom}%;
}
STYLE;
//In case a script was using "style" attributes of these elements
$script = <<<SCRIPT
prodImageContainers = document.querySelectorAll(".product-image-container-{$block->getProductId()}");
for (var i = 0; i < prodImageContainers.length; i++) {
    prodImageContainers[i].style.width = "{$width}px";
}
prodImageContainersWrappers = document.querySelectorAll(
    ".product-image-container-{$block->getProductId()}  span.product-image-wrapper"
);
for (var i = 0; i < prodImageContainersWrappers.length; i++) {
    prodImageContainersWrappers[i].style.paddingBottom = "{$paddingBottom}%";
}
SCRIPT;

?>
<?= /* @noEscape */ $secureRenderer->renderTag('style', [], $styles, false) ?>
<?= /* @noEscape */ $secureRenderer->renderTag('script', ['type' => 'text/javascript'], $script, false) ?>

